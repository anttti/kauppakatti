service cloud.firestore {
  match /databases/{database}/documents {
    // Rules for shareable shopping lists
    match /shoppinglists/{shoppinglistId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isValidNewList() {
        // Valid if shoppinglist does not exist and the new shoppinglist has the correct owner.
        return resource == null
          && request.auth.uid in request.resource.data.owners;
      }

      // Owners can read, write, and delete shoppinglists
      allow read, update, delete: if isSignedIn() && request.auth.uid in resource.data.owners;
      allow create: if isSignedIn() && isValidNewList();
      
      // Shopping list items are secured based on their shopping list's owner list
      match /items/{itemId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/shoppinglists/$(shoppinglistId)).data.owners;
      }
    }
  }
}